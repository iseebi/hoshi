name: Build/release

on:
  push:
#    branches:
#      - main
#      - develop
    tags:
      - 'v*'

jobs:
  release:
    runs-on: macos-14
    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Developer ID Certificate
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          rm $RUNNER_TEMP/build_certificate.p12
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MAC_CERTS }}
          P12_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Prepare for app notarization
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.NOTARIZATION_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.NOTARIZATION_API_KEY_ID }}.p8

      - name: Build CLI Packages
        run: |
          npm install
          npm run build
          npm run notarization

      - name: Notarization
        run: |
          npm run notarization
        env:
          KEY_PATH: ~/private_keys/AuthKey_${{ secrets.NOTARIZATION_API_KEY_ID }}.p8
          KEY_ID: ${{ secrets.NOTARIZATION_API_KEY_ID }}
          ISSUER_ID:  ${{ secrets.NOTARIZATION_API_KEY_ISSUER }}

      - name: Attach Packages
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          gh release upload ${{ github.ref_name }} dist/*.*
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm -r ~/private_keys/
